name: Go

on:
  push:
    tags:
      - 'v*'

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.16

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: |
        go get -v -t -d ./...
        git submodule update --init --recursive
        if [ -f Gopkg.toml ]; then
            curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
            dep ensure
        fi

    - name: Build - Linux
      run: GOOS=linux go mod tidy && GOOS=linux make && zip release-linux.zip sign-your-horse
    - name: Build - Windows
      run: GOOS=windows go mod tidy && GOOS=windows make && zip release-windows.zip sign-your-horse.exe
    - name: Build - MacOS
      run: GOOS=darwin go mod tidy && GOOS=darwin make && zip release-macos.zip sign-your-horse

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false

    - name: Upload Release Asset - Linux
      id: upload-release-asset-linux
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-linux.zip
        asset_name: release-linux.zip
        asset_content_type: application/zip

    - name: Upload Release Asset - Windows
      id: upload-release-asset-windows
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-windows.zip
        asset_name: release-windows.zip
        asset_content_type: application/zip

    - name: Upload Release Asset - MacOS
      id: upload-release-asset-macos
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./release-macos.zip
        asset_name: release-macos.zip
        asset_content_type: application/zip